//tris Composto&Donadelli

import java.util.Arrays;
import java.util.Scanner;

public class tris {

    public static void main(String[] args) {
        char c = 27;

        // insegna sala giochi
        String[][] sala = {
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " }, // cornice magenta
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " }, // cornice gialla
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " }, // cornice nera
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " },
                { "   ", "   ", "   ", "   ", " S ", " A ", " L ", " A ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " },
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " },
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", " G ", " I ", " O ", " C ", " H ", " I ", "   ",
                        "   ", "   ", "   " },
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " },
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " }, // cor nera
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " }, // cor gialla
                { "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ", "   ",
                        "   ", "   ", "   " } };// cor magenta
        // riga
        for (int i = 0; i < 17; i++) {

            System.out.print(c + "[45m" + sala[0][i] + c + "[0m");
        }
        System.out.println();

        // riga 2
        System.out.print(c + "[45m" + sala[1][0] + c + "[0m");
        for (int i = 1; i < 16; i++) {

            System.out.print(c + "[43;33;1m" + sala[1][i] + c + "[0m");
        }
        System.out.print(c + "[45m" + sala[1][16] + c + "[0m");
        System.out.println();

        // riga 3
        System.out.print(c + "[45m" + sala[2][0] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[2][1] + c + "[0m");
        for (int i = 2; i < 15; i++) {

            System.out.print(c + "[40m" + sala[2][i] + c + "[0m");
        }
        System.out.print(c + "[43;33;1m" + sala[2][15] + c + "[0m");
        System.out.print(c + "[45m" + sala[2][16] + c + "[0m");

        System.out.println();

        // riga 4
        System.out.print(c + "[45m" + sala[3][0] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[3][1] + c + "[0m");
        for (int i = 2; i < 10; i++) {

            System.out.print(c + "[40m" + sala[3][i] + c + "[0m");
        }
        System.out.print(c + "[43;33;1m" + sala[3][10] + c + "[0m");
        System.out.print(c + "[45m" + sala[3][11] + c + "[0m");

        System.out.print(c + "[43;33;1m" + sala[3][12] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[3][13] + c + "[0m");
        System.out.print(c + "[40m" + sala[3][14] + c + "[0m");

        System.out.print(c + "[43;33;1m" + sala[3][15] + c + "[0m");
        System.out.print(c + "[45m" + sala[3][16] + c + "[0m");

        System.out.println();

        // riga 5
        System.out.print(c + "[45m" + sala[4][0] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[4][1] + c + "[0m");
        System.out.print(c + "[40m" + sala[4][2] + c + "[0m");
        System.out.print(c + "[40m" + sala[4][3] + c + "[0m");
        System.out.print(c + "[33;40;1m" + sala[4][4] + c + "[1m");
        System.out.print(c + "[35;40;1m" + sala[4][5] + c + "[1m");
        System.out.print(c + "[33;40;1m" + sala[4][6] + c + "[1m");
        System.out.print(c + "[35;40;1m" + sala[4][7] + c + "[1m");
        System.out.print(c + "[40m" + sala[4][8] + c + "[0m");
        System.out.print(c + "[40m" + sala[4][9] + c + "[0m");
        System.out.print(c + "[40m" + sala[4][10] + c + "[0m");
        System.out.print(c + "[40m" + sala[4][11] + c + "[0m");
        System.out.print(c + "[45m" + sala[4][12] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[4][13] + c + "[0m");
        System.out.print(c + "[40m" + sala[4][14] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[4][15] + c + "[0m");
        System.out.print(c + "[45m" + sala[4][16] + c + "[0m");
        System.out.println();
        // riga 6
        System.out.print(c + "[45m" + sala[5][0] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[5][1] + c + "[0m");
        for (int i = 2; i < 15; i++) {

            System.out.print(c + "[40m" + sala[5][i] + c + "[0m");
        }
        System.out.print(c + "[43;33;1m" + sala[5][15] + c + "[0m");
        System.out.print(c + "[45m" + sala[5][16] + c + "[0m");

        System.out.println();
        // riga 7
        System.out.print(c + "[45m" + sala[6][0] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[6][1] + c + "[0m");
        System.out.print(c + "[40m" + sala[6][2] + c + "[0m");
        System.out.print(c + "[45m" + sala[6][3] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[6][4] + c + "[0m");
        System.out.print(c + "[40m" + sala[6][5] + c + "[0m");
        System.out.print(c + "[40m" + sala[6][6] + c + "[0m");
        System.out.print(c + "[33;40;1m" + sala[6][7] + c + "[1m");
        System.out.print(c + "[35;40;1m" + sala[6][8] + c + "[1m");
        System.out.print(c + "[33;40;1m" + sala[6][9] + c + "[1m");
        System.out.print(c + "[35;40;1m" + sala[6][10] + c + "[1m");
        System.out.print(c + "[33;40;1m" + sala[6][11] + c + "[1m");
        System.out.print(c + "[35;40;1m" + sala[6][12] + c + "[1m");
        System.out.print(c + "[40m" + sala[6][13] + c + "[0m");
        System.out.print(c + "[40m" + sala[6][14] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[6][15] + c + "[0m");
        System.out.print(c + "[45m" + sala[6][16] + c + "[0m");
        System.out.println();

        // riga 8
        System.out.print(c + "[45m" + sala[7][0] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[7][1] + c + "[0m");
        System.out.print(c + "[40m" + sala[7][2] + c + "[0m");
        System.out.print(c + "[45m" + sala[7][3] + c + "[0m");
        System.out.print(c + "[45m" + sala[7][4] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[7][5] + c + "[0m");
        System.out.print(c + "[45m" + sala[7][6] + c + "[0m");
        System.out.print(c + "[40m" + sala[7][7] + c + "[0m");
        System.out.print(c + "[40m" + sala[7][8] + c + "[0m");
        System.out.print(c + "[40m" + sala[7][9] + c + "[0m");
        System.out.print(c + "[40m" + sala[7][10] + c + "[0m");
        System.out.print(c + "[40m" + sala[7][11] + c + "[0m");
        System.out.print(c + "[40m" + sala[7][12] + c + "[0m");
        System.out.print(c + "[45m" + sala[7][13] + c + "[0m");
        System.out.print(c + "[40m" + sala[7][14] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[7][15] + c + "[0m");
        System.out.print(c + "[45m" + sala[7][16] + c + "[0m");
        System.out.println();

        // riga 9
        System.out.print(c + "[45m" + sala[8][0] + c + "[0m");
        System.out.print(c + "[43;33;1m" + sala[8][1] + c + "[0m");
        for (int i = 2; i < 15; i++) {

            System.out.print(c + "[40m" + sala[8][i] + c + "[0m");
        }
        System.out.print(c + "[43;33;1m" + sala[8][15] + c + "[0m");
        System.out.print(c + "[45m" + sala[8][16] + c + "[0m");

        System.out.println();

        // riga 10
        System.out.print(c + "[45m" + sala[9][0] + c + "[0m");
        for (int i = 1; i < 16; i++) {

            System.out.print(c + "[43;33;1m" + sala[9][i] + c + "[0m");
        }
        System.out.print(c + "[45m" + sala[9][16] + c + "[0m");
        System.out.println();
        // riga 11

        for (int i = 0; i < 17; i++) {

            System.out.print(c + "[45m" + sala[10][i] + c + "[0m");
        }
        System.out.println();

        // INSEGNA TRIS
        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println();
        String[][] b = { { "   ", "   ", "   ", "   ", "   ", "   " },
                { "   ", " T ", " R ", " I ", " S ", "   " },
                { "   ", "   ", "   ", "   ", "   ", "   " } };

        for (int i = 0; i < b.length; i++) {
            System.out.println();
            for (int j = 0; j < b[0].length; j++) {
                if (b[i][j] == "   ") {
                    System.out.print(c + "[40m" + b[i][j] + c + "[0m");
                } else {
                    System.out.print(c + "[41m" + b[i][j] + c + "[0m");
                }

            }
        }

        // tabella punteggi
        System.out.println();
        String z[][] = {
                { "  —————————————————————————————————" },
                { " |  ҉  P U N T E G G I  ҉  | quote |   " },
                { "  —————————————————————————————————" },
                { " |     V I T T O R I A     |   2   |" },
                { "  —————————————————————————————————" },
                { " |     P A R E G G I O     |   1   |" },
                { "  —————————————————————————————————" },
                { " |     S C O N F I T T A   |   0   |" },
                { "  —————————————————————————————————" } };
        for (int i = 0; i < z.length; i++) {
            System.out.println();
            for (int j = 0; j < z[0].length; j++) {
                System.out.print(z[i][j]);
            }
        }

        Scanner input1 = new Scanner(System.in);
        System.out.print(
                "\n\nIn che modalità vuoi giocare?\n-Mod singolo facile inserire --> 1\n-Mod singolo difficile inserire --> 2\n-Doppio inserire --> 3\n");
        String mod = input1.nextLine();
        System.out.println();

        String tris[][] = new String[5][5];
        // riempimento colonne ES
        for (int i = 0; i < tris.length; i++) {
            for (int j = 0; j < tris.length; j++) {

                if (j == 1 || j == 3) {
                    tris[i][j] = "|";
                } else {
                    tris[i][j] = " ";

                }
            }
        }

        // riempimento righe ES
        for (int i = 1; i < tris.length; i += 2) {
            for (int j = 0; j < tris.length; j++) {
                tris[i][j] = "-";

            }
        }

        // riempimento intersezioni ES
        for (int i = 0; i < tris.length; i++) {
            for (int j = 0; j < tris.length; j++) {
                if ((i == 1 && j == 1) || (i == 3 && j == 1) || (i == 3 && j == 3) || (i == 1 && j == 3)) {
                    tris[i][j] = "|";

                }
            }

        }

        // riempimento numeri
        int n = 1;
        String ns = "";
        for (int i = 0; i < tris.length; i += 2) {
            for (int j = 0; j < tris.length; j += 2) {
                ns = String.valueOf(n);
                tris[i][j] = ns;
                n++;
            }

        }

        // SCELTA MOD
        switch (mod) {
            case "1":
                metsingolofac(tris);
                break;
            case "2":
                metsingolodif(tris);
                break;
            case "3":
                metdoppio(tris);
                break;
        }
    }

    /**
     * @param tris
     */
    public static void metsingolofac(String[][] tris) {

        // scelta inizio
        Scanner input3 = new Scanner(System.in);
        System.out.print("\nchi comincia?\n-io\n-avversario\n");
        String primo = input3.nextLine();
        System.out.println();
        int inizio = 0;
        switch (primo) {
            case "avversario":
                inizio = 1;
                break;
        }

        // scelta segno
        Scanner input2 = new Scanner(System.in);
        System.out.print("\nche segno vuoi utilizzare?\n-x\n-o\n");
        String segno = input2.nextLine();
        System.out.println();
        String utente = "";
        String macchina = "";
        switch (segno) {
            case "x":
                utente = "X";
                macchina = "O";
                break;

            case "o":
                utente = "O";
                macchina = "X";
                break;
        }
        // nickname
        Scanner input4 = new Scanner(System.in);
        System.out.println("inserire nickname");
        String player = input4.nextLine();

        // stampa primo tris
        for (int i = 0; i < tris.length; i++) {
            System.out.println();
            for (int j = 0; j < tris.length; j++) {
                System.out.print(" " + tris[i][j] + " ");
            }
        }

        // inizio gioco
        int rip = 0;
        char c = 27;
        int pareggio = 0;

        // creo e riempio array per segnare posizioni già usate
        int contaposizioni[] = new int[9];
        for (int i = 0; i < tris.length; i++) {
            contaposizioni[i] = 0;
        }
        int valorearray = 0;

        Scanner input5 = new Scanner(System.in);
        String coordinata = "";
        // GIOCA INIZIO UTENTE
        if (inizio == 0) {
            while (rip < 9) {
                if (rip % 2 == 0)// GIOCA UTENTE
                {
                    if (utente == "X") {
                        System.out.println(
                                "\n\n" + player + ", basandoti sulla legenda dove vuoi inserire la '" + utente + "' ?");
                    } else {
                        System.out.println(
                                "\n\n" + player + ", basandoti sulla legenda dove vuoi inserire il '" + utente + "' ?");
                    }

                    int b = 0;
                    while (b == 0) {
                        coordinata = input5.nextLine();
                        int conpostutente = Integer.valueOf(coordinata);
                        if (conpostutente < 10) {
                            if (contaposizioni[conpostutente - 1] == 0) {

                                // turno utente
                                switch (coordinata) {
                                    case "1":
                                        tris[0][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "2":
                                        tris[0][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "3":
                                        tris[0][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "4":
                                        tris[2][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "5":
                                        tris[2][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "6":
                                        tris[2][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "7":
                                        tris[4][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "8":
                                        tris[4][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "9":
                                        tris[4][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;

                                }

                                // controllo vincita
                                if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                b++;
                            } else {
                                System.out.println("casella occupatsa,riprova");
                            }
                        } else {
                            System.out.println("casella non esistente,riprova");
                        }
                    }
                    // stampa mossa utente

                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {
                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }
                            ;
                        }
                    }

                    rip++;
                } // fine turno utente

                else {
                    // turno avversario
                    System.out.println("\n\nturno dell'avversario");
                    int a = 0;
                    int conpos = 0;
                    int casella = (int) (Math.random() * 8);
                    String casellas = String.valueOf(casella);
                    int casellagiusta = 0;
                    while (a == 0) {
                        casella = (int) (Math.random() * 8);
                        casellagiusta = casella + 1;
                        casellas = String.valueOf(casellagiusta);
                        conpos = casellagiusta - 1;
                        if (contaposizioni[conpos] == 0) {
                            a++;
                            switch (casellas) {
                                case "1":
                                    tris[0][0] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "2":
                                    tris[0][2] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "3":
                                    tris[0][4] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "4":
                                    tris[2][0] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "5":
                                    tris[2][2] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "6":
                                    tris[2][4] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "7":
                                    tris[4][0] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "8":
                                    tris[4][2] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "9":
                                    tris[4][4] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;

                            }
                            // controllo vincita
                            if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }
                            if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }
                            if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                            if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }
                            if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }
                            if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                            if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                System.out.println("HAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                            if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                System.out.println("HAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                            if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                System.out.println("HAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                        }
                    }

                    // prossimo turno e stampa tris
                    rip++;
                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {

                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }

                        }
                    }
                }

            } // fine mosse
        } // fine se inizia utente

        // SE INIZIA AVVERSARIO
        else if (inizio == 1) {
            while (rip < 9) {

                if (rip % 2 == 0) {
                    // turno avversario
                    System.out.println("\n\nturno dell'avversario");
                    int a = 0;
                    int conpos = 0;
                    int casella = (int) (Math.random() * 8);
                    String casellas = String.valueOf(casella);
                    int casellagiusta = 0;
                    while (a == 0) {
                        casella = (int) (Math.random() * 8);
                        casellagiusta = casella + 1;
                        casellas = String.valueOf(casellagiusta);
                        conpos = casellagiusta - 1;
                        if (contaposizioni[conpos] == 0) {
                            a++;
                            switch (casellas) {
                                case "1":
                                    tris[0][0] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "2":
                                    tris[0][2] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "3":
                                    tris[0][4] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "4":
                                    tris[2][0] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "5":
                                    tris[2][2] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "6":
                                    tris[2][4] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "7":
                                    tris[4][0] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "8":
                                    tris[4][2] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;
                                case "9":
                                    tris[4][4] = macchina;
                                    contaposizioni[conpos] = 1;

                                    break;

                            }

                            // controllo vincita
                            if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }
                            if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }
                            if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                            if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }
                            if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }
                            if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                System.out.println("\nHAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                            if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                System.out.println("HAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                            if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                System.out.println("HAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                            if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                System.out.println("HAI PERSO!");
                                rip = 9;
                                pareggio++;
                            }

                        }
                    }
                    // prossimo turno e stampa tris
                    rip++;
                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {

                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }

                        }
                    }
                }

                else// GIOCA UTENTE
                {
                    if (utente == "X") {
                        System.out.println(
                                "\n\n" + player + ", basandoti sulla legenda dove vuoi inserire la '" + utente + "' ?");
                    } else {
                        System.out.println(
                                "\n\n" + player + ", basandoti sulla legenda dove vuoi inserire il '" + utente + "' ?");
                    }
                    int b = 0;
                    while (b == 0) {
                        coordinata = input5.nextLine();
                        int conpostutente = Integer.valueOf(coordinata);
                        if (conpostutente < 10) {
                            if (contaposizioni[conpostutente - 1] == 0) {

                                // turno utente
                                switch (coordinata) {
                                    case "1":
                                        tris[0][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "2":
                                        tris[0][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "3":
                                        tris[0][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "4":
                                        tris[2][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "5":
                                        tris[2][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "6":
                                        tris[2][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "7":
                                        tris[4][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "8":
                                        tris[4][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "9":
                                        tris[4][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;

                                }

                                // controllo vincita
                                if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                b++;
                            } else {
                                System.out.println("casella occupatsa,riprova");
                            }
                        } else {
                            System.out.println("casella non esistente,riprova");
                        }
                    }
                    // stampa mossa utente

                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {
                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }
                            ;
                        }
                    }

                    rip++;
                } // fine turno utente

            }

        }
        if (pareggio == 0) {
            System.out.print("\n\n PAREGGIO");
        }
        pareggio = 0;

    }// fine metodo gioco singolo

    // inizia gioco in doppio
    public static void metdoppio(String[][] tris) {
        // nickname
        Scanner input4 = new Scanner(System.in);
        System.out.println("inserire nickname Giocatore 1");
        String player = input4.nextLine();
        System.out.println("\ninserire nickname Giocatore 2");
        String player2 = input4.nextLine();

        // scelta inizio
        Scanner input3 = new Scanner(System.in);
        System.out.print("\nchi comincia?\n" + player + " --> inserire '1'\n" + player2 + " --> inserire '2'");
        String primo = input3.nextLine();
        System.out.println();
        int inizio = 0;
        switch (primo) {
            case "2":
                inizio = 1;
                break;
        }

        // scelta segno
        Scanner input2 = new Scanner(System.in);
        System.out.print("\n" + player + " che segno vuoi utilizzare?\n-x\n-o\n");
        String segno = input2.nextLine();
        System.out.println();
        String utente = "";
        String macchina = "";
        switch (segno) {
            case "x":
                utente = "X";
                macchina = "O";
                break;

            case "o":
                utente = "O";
                macchina = "X";
                break;
        }

        // stampa primo tris
        for (int i = 0; i < tris.length; i++) {
            System.out.println();
            for (int j = 0; j < tris.length; j++) {
                System.out.print(" " + tris[i][j] + " ");
            }
        }

        // inizio gioco
        int rip = 0;
        char c = 27;
        int pareggio = 0;

        // creo e riempio array per segnare posizioni già usate
        int contaposizioni[] = new int[9];
        for (int i = 0; i < tris.length; i++) {
            contaposizioni[i] = 0;
        }
        int valorearray = 0;

        Scanner input5 = new Scanner(System.in);
        String coordinata = "";
        // GIOCA INIZIO prima g1
        if (inizio == 0) {
            while (rip < 9) {
                if (rip % 2 == 0)// GIOCA UTENTE1
                {
                    if (utente == "X") {
                        System.out.println(
                                "\n\n" + c + "[31m" + player + c + "[0m"
                                        + ", basandoti sulla legenda dove vuoi inserire la '" + utente + "' ?");
                    } else {
                        System.out.println(
                                "\n\n" + c + "[31m" + player + c + "[0m"
                                        + ", basandoti sulla legenda dove vuoi inserire il '" + utente + "' ?");
                    }

                    int b = 0;
                    while (b == 0) {
                        coordinata = input5.nextLine();
                        int conpostutente = Integer.valueOf(coordinata);
                        if (conpostutente < 10) {
                            if (contaposizioni[conpostutente - 1] == 0) {

                                // turno utente
                                switch (coordinata) {
                                    case "1":
                                        tris[0][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "2":
                                        tris[0][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "3":
                                        tris[0][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "4":
                                        tris[2][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "5":
                                        tris[2][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "6":
                                        tris[2][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "7":
                                        tris[4][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "8":
                                        tris[4][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "9":
                                        tris[4][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;

                                }

                                // controllo vincita
                                if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                b++;
                            } else {
                                System.out.println("casella occupatsa,riprova");
                            }
                        } else {
                            System.out.println("casella non esistente,riprova");
                        }
                    }
                    // stampa mossa utente

                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {
                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }
                            ;
                        }
                    }

                    rip++;
                } // fine turno utente 1

                else { // inizio turno utente 2
                    if (macchina == "X") {
                        System.out.println(
                                "\n\n" + c + "[34m" + player2 + c + "[0m"
                                        + ", basandoti sulla legenda dove vuoi inserire la '" + macchina
                                        + "' ?");
                    } else {
                        System.out.println(
                                "\n\n" + c + "[34m" + player2 + c + "[0m"
                                        + ", basandoti sulla legenda dove vuoi inserire il '" + macchina
                                        + "' ?");
                    }

                    int b = 0;
                    while (b == 0) {
                        coordinata = input5.nextLine();
                        int conpostutente = Integer.valueOf(coordinata);
                        if (conpostutente < 10) {
                            if (contaposizioni[conpostutente - 1] == 0) {

                                // turno utente
                                switch (coordinata) {
                                    case "1":
                                        tris[0][0] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "2":
                                        tris[0][2] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "3":
                                        tris[0][4] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "4":
                                        tris[2][0] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "5":
                                        tris[2][2] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "6":
                                        tris[2][4] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "7":
                                        tris[4][0] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "8":
                                        tris[4][2] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "9":
                                        tris[4][4] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;

                                }

                                // controllo vincita
                                if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                b++;
                            } else {
                                System.out.println("casella occupatsa,riprova");
                            }
                        } else {
                            System.out.println("casella non esistente,riprova");
                        }
                    }
                    // stampa mossa utente

                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {
                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }
                            ;
                        }
                    }

                    rip++;
                }

            } // fine mosse
        } // fine se inizia g1

        // SE INIZIA g2
        else if (inizio == 1) {
            while (rip < 9) {

                if (rip % 2 != 0)// GIOCA UTENTE1
                {
                    if (utente == "X") {
                        System.out.println(
                                "\n\n" + c + "[31m" + player + c + "[0m"
                                        + ", basandoti sulla legenda dove vuoi inserire la '" + utente + "' ?");
                    } else {
                        System.out.println(
                                "\n\n" + c + "[31m" + player + c + "[0m"
                                        + ", basandoti sulla legenda dove vuoi inserire il '" + utente + "' ?");
                    }

                    int b = 0;
                    while (b == 0) {
                        coordinata = input5.nextLine();
                        int conpostutente = Integer.valueOf(coordinata);
                        if (conpostutente < 10) {
                            if (contaposizioni[conpostutente - 1] == 0) {

                                // turno utente
                                switch (coordinata) {
                                    case "1":
                                        tris[0][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "2":
                                        tris[0][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "3":
                                        tris[0][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "4":
                                        tris[2][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "5":
                                        tris[2][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "6":
                                        tris[2][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "7":
                                        tris[4][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "8":
                                        tris[4][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "9":
                                        tris[4][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;

                                }

                                // controllo vincita
                                if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                    System.out.println("\n" + c + "[31m" + player + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                b++;
                            } else {
                                System.out.println("casella occupatsa,riprova");
                            }
                        } else {
                            System.out.println("casella non esistente,riprova");
                        }
                    }
                    // stampa mossa utente

                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {
                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }
                            ;
                        }
                    }

                    rip++;
                } // fine turno utente 1

                else { // inizio turno utente 2
                    if (macchina == "X") {
                        System.out.println(
                                "\n\n" + c + "[34m" + player2 + c + "[0m"
                                        + ", basandoti sulla legenda dove vuoi inserire la '" + macchina
                                        + "' ?");
                    } else {
                        System.out.println(
                                "\n\n" + c + "[34m" + player2 + c + "[0m"
                                        + ", basandoti sulla legenda dove vuoi inserire il '" + macchina
                                        + "' ?");
                    }

                    int b = 0;
                    while (b == 0) {
                        coordinata = input5.nextLine();
                        int conpostutente = Integer.valueOf(coordinata);
                        if (conpostutente < 10) {
                            if (contaposizioni[conpostutente - 1] == 0) {

                                // turno utente
                                switch (coordinata) {
                                    case "1":
                                        tris[0][0] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "2":
                                        tris[0][2] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "3":
                                        tris[0][4] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "4":
                                        tris[2][0] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "5":
                                        tris[2][2] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "6":
                                        tris[2][4] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "7":
                                        tris[4][0] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "8":
                                        tris[4][2] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "9":
                                        tris[4][4] = macchina;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;

                                }

                                // controllo vincita
                                if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                    System.out.println("\n" + c + "[34m" + player2 + c + "[0m" + " HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                b++;
                            } else {
                                System.out.println("casella occupatsa,riprova");
                            }
                        } else {
                            System.out.println("casella non esistente,riprova");
                        }
                    }
                    // stampa mossa utente

                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {
                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }
                            ;
                        }
                    }

                    rip++;
                }

            }

        }
        if (pareggio == 0) {
            System.out.print("\n\n PAREGGIO");
        }
        pareggio = 0;

    }// fine metodo gioco doppio

    // INIZIO MET DIFFICILE
    public static void metsingolodif(String tris[][]) {

        // scelta inizio
        Scanner input3 = new Scanner(System.in);
        System.out.print("\nchi comincia?\n-io\n-avversario\n");
        String primo = input3.nextLine();
        System.out.println();
        int inizio = 0;
        switch (primo) {
            case "avversario":
                inizio = 1;
                break;
        }

        // scelta segno
        Scanner input2 = new Scanner(System.in);
        System.out.print("\nche segno vuoi utilizzare?\n-x\n-o\n");
        String segno = input2.nextLine();
        System.out.println();
        String utente = "";
        String macchina = "";
        switch (segno) {
            case "x":
                utente = "X";
                macchina = "O";
                break;

            case "o":
                utente = "O";
                macchina = "X";
                break;
        }
        // nickname
        Scanner input4 = new Scanner(System.in);
        System.out.println("inserire nickname");
        String player = input4.nextLine();

        // stampa primo tris
        for (int i = 0; i < tris.length; i++) {
            System.out.println();
            for (int j = 0; j < tris.length; j++) {
                System.out.print(" " + tris[i][j] + " ");
            }
        }

        // inizio gioco
        int rip = 0;
        char c = 27;
        int pareggio = 0;

        // creo e riempio array per segnare posizioni già usate
        int contaposizioni[] = new int[9];
        for (int i = 0; i < tris.length; i++) {
            contaposizioni[i] = 0;
        }
        int valorearray = 0;

        Scanner input5 = new Scanner(System.in);
        String coordinata = "";
        // GIOCA INIZIO UTENTE
        if (inizio == 0) {
            while (rip < 9) {
                if (rip % 2 == 0)// GIOCA UTENTE
                {
                    if (utente == "X") {
                        System.out.println(
                                "\n\n" + player + ", basandoti sulla legenda dove vuoi inserire la '" + utente + "' ?");
                    } else {
                        System.out.println(
                                "\n\n" + player + ", basandoti sulla legenda dove vuoi inserire il '" + utente + "' ?");
                    }

                    int b = 0;
                    while (b == 0) {
                        coordinata = input5.nextLine();
                        int conpostutente = Integer.valueOf(coordinata);
                        if (conpostutente < 10) {
                            if (contaposizioni[conpostutente - 1] == 0) {

                                // turno utente
                                switch (coordinata) {
                                    case "1":
                                        tris[0][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "2":
                                        tris[0][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "3":
                                        tris[0][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "4":
                                        tris[2][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "5":
                                        tris[2][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "6":
                                        tris[2][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "7":
                                        tris[4][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "8":
                                        tris[4][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "9":
                                        tris[4][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;

                                }

                                // controllo vincita
                                if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                b++;
                            } else {
                                System.out.println("casella occupatsa,riprova");
                            }
                        } else {
                            System.out.println("casella non esistente,riprova");
                        }
                    }
                    // stampa mossa utente

                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {
                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }
                            ;
                        }
                    }

                    rip++;
                } // fine turno utente

                else {
                    // turno avversario
                    System.out.println("\n\nturno dell'avversario");

                    int t = 0;

                    // mosse a favore macchina
                    if (t == 0 && tris[0][0] == macchina && tris[0][2] == macchina && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][0] == macchina && tris[2][2] == macchina && tris[2][4] != "X"
                            && tris[2][4] != "O") {
                        tris[2][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == macchina && tris[4][2] == macchina && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][4] == macchina && tris[0][2] == macchina && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][4] == macchina && tris[2][2] == macchina && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == macchina && tris[4][2] == macchina && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[2][0] == macchina && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][2] == macchina && tris[2][2] == macchina && tris[4][2] != "X"
                            && tris[4][2] != "O") {
                        tris[4][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == macchina && tris[2][4] == macchina && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[4][0] == macchina && tris[2][0] == macchina && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][2] == macchina && tris[2][2] == macchina && tris[0][2] != "X"
                            && tris[0][2] != "O") {
                        tris[0][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == macchina && tris[2][4] == macchina && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][4] == macchina && tris[0][2] == macchina && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][4] == macchina && tris[2][2] == macchina && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == macchina && tris[4][2] == macchina && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[0][4] == macchina && tris[0][2] != "X"
                            && tris[0][2] != "O") {
                        tris[0][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][0] == macchina && tris[2][4] == macchina && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == macchina && tris[4][4] == macchina && tris[4][2] != "X"
                            && tris[4][2] != "O") {
                        tris[4][2] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[4][0] == macchina && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][2] == macchina && tris[4][2] == macchina && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == macchina && tris[4][4] == macchina && tris[2][4] != "X"
                            && tris[2][4] != "O") {
                        tris[2][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[4][4] == macchina && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == macchina && tris[4][0] == macchina && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[2][2] == macchina && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == macchina && tris[2][2] == macchina && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == macchina && tris[2][2] == macchina && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == macchina && tris[2][2] == macchina && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }

                    // mosse contro utente
                    if (t == 0 && tris[0][0] == utente && tris[0][2] == utente && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][0] == utente && tris[2][2] == utente && tris[2][4] != "X"
                            && tris[2][4] != "O") {
                        tris[2][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == utente && tris[4][2] == utente && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][4] == utente && tris[0][2] == utente && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][4] == utente && tris[2][2] == utente && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == utente && tris[4][2] == utente && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[2][0] == utente && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][2] == utente && tris[2][2] == utente && tris[4][2] != "X"
                            && tris[4][2] != "O") {
                        tris[4][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == utente && tris[2][4] == utente && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[4][0] == utente && tris[2][0] == utente && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][2] == utente && tris[2][2] == utente && tris[0][2] != "X"
                            && tris[0][2] != "O") {
                        tris[0][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == utente && tris[2][4] == utente && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][4] == utente && tris[0][2] == utente && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][4] == utente && tris[2][2] == utente && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == utente && tris[4][2] == utente && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[0][4] == utente && tris[0][2] != "X"
                            && tris[0][2] != "O") {
                        tris[0][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][0] == utente && tris[2][4] == utente && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == utente && tris[4][4] == utente && tris[4][2] != "X"
                            && tris[4][2] != "O") {
                        tris[4][2] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[4][0] == utente && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][2] == utente && tris[4][2] == utente && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == utente && tris[4][4] == utente && tris[2][4] != "X"
                            && tris[2][4] != "O") {
                        tris[2][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[4][4] == utente && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == utente && tris[4][0] == utente && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[2][2] == utente && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == utente && tris[2][2] == utente && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == utente && tris[2][2] == utente && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == utente && tris[2][2] == utente && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }

                    if (t == 0) {

                        int a = 0;
                        int conpos = 0;
                        int casella = (int) (Math.random() * 8);
                        String casellas = String.valueOf(casella);
                        int casellagiusta = 0;
                        while (a == 0) {
                            casella = (int) (Math.random() * 8);
                            casellagiusta = casella + 1;
                            casellas = String.valueOf(casellagiusta);
                            conpos = casellagiusta - 1;
                            if (contaposizioni[conpos] == 0) {
                                a++;
                                switch (casellas) {
                                    case "1":
                                        tris[0][0] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "2":
                                        tris[0][2] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "3":
                                        tris[0][4] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "4":
                                        tris[2][0] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "5":
                                        tris[2][2] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "6":
                                        tris[2][4] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "7":
                                        tris[4][0] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "8":
                                        tris[4][2] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "9":
                                        tris[4][4] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;

                                }

                            }
                        }
                    }
                    // controllo vincita
                    if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }
                    if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }
                    if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }
                    if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }
                    if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                        System.out.println("HAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                        System.out.println("HAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                        System.out.println("HAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    // prossimo turno e stampa tris
                    rip++;
                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {

                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }

                        }
                    }
                }

            } // fine mosse
        } // fine se inizia utente

        // SE INIZIA AVVERSARIO
        else if (inizio == 1) {
            while (rip < 9) {

                if (rip % 2 == 0) {
                    // turno avversario
                    System.out.println("\n\nturno dell'avversario");

                    int t = 0;

                    // mosse a favore macchina
                    if (t == 0 && tris[0][0] == macchina && tris[0][2] == macchina && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][0] == macchina && tris[2][2] == macchina && tris[2][4] != "X"
                            && tris[2][4] != "O") {
                        tris[2][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == macchina && tris[4][2] == macchina && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][4] == macchina && tris[0][2] == macchina && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][4] == macchina && tris[2][2] == macchina && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == macchina && tris[4][2] == macchina && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[2][0] == macchina && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][2] == macchina && tris[2][2] == macchina && tris[4][2] != "X"
                            && tris[4][2] != "O") {
                        tris[4][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == macchina && tris[2][4] == macchina && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[4][0] == macchina && tris[2][0] == macchina && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][2] == macchina && tris[2][2] == macchina && tris[0][2] != "X"
                            && tris[0][2] != "O") {
                        tris[0][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == macchina && tris[2][4] == macchina && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][4] == macchina && tris[0][2] == macchina && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][4] == macchina && tris[2][2] == macchina && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == macchina && tris[4][2] == macchina && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[0][4] == macchina && tris[0][2] != "X"
                            && tris[0][2] != "O") {
                        tris[0][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][0] == macchina && tris[2][4] == macchina && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == macchina && tris[4][4] == macchina && tris[4][2] != "X"
                            && tris[4][2] != "O") {
                        tris[4][2] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[4][0] == macchina && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][2] == macchina && tris[4][2] == macchina && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == macchina && tris[4][4] == macchina && tris[2][4] != "X"
                            && tris[2][4] != "O") {
                        tris[2][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[4][4] == macchina && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == macchina && tris[4][0] == macchina && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == macchina && tris[2][2] == macchina && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == macchina && tris[2][2] == macchina && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == macchina && tris[2][2] == macchina && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == macchina && tris[2][2] == macchina && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }

                    // mosse contro utente
                    if (t == 0 && tris[0][0] == utente && tris[0][2] == utente && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][0] == utente && tris[2][2] == utente && tris[2][4] != "X"
                            && tris[2][4] != "O") {
                        tris[2][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == utente && tris[4][2] == utente && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][4] == utente && tris[0][2] == utente && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][4] == utente && tris[2][2] == utente && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == utente && tris[4][2] == utente && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[2][0] == utente && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][2] == utente && tris[2][2] == utente && tris[4][2] != "X"
                            && tris[4][2] != "O") {
                        tris[4][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == utente && tris[2][4] == utente && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[4][0] == utente && tris[2][0] == utente && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][2] == utente && tris[2][2] == utente && tris[0][2] != "X"
                            && tris[0][2] != "O") {
                        tris[0][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == utente && tris[2][4] == utente && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][4] == utente && tris[0][2] == utente && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][4] == utente && tris[2][2] == utente && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == utente && tris[4][2] == utente && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[0][4] == utente && tris[0][2] != "X"
                            && tris[0][2] != "O") {
                        tris[0][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[2][0] == utente && tris[2][4] == utente && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == utente && tris[4][4] == utente && tris[4][2] != "X"
                            && tris[4][2] != "O") {
                        tris[4][2] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[4][0] == utente && tris[2][0] != "X"
                            && tris[2][0] != "O") {
                        tris[2][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][2] == utente && tris[4][2] == utente && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == utente && tris[4][4] == utente && tris[2][4] != "X"
                            && tris[2][4] != "O") {
                        tris[2][4] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[4][4] == utente && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == utente && tris[4][0] == utente && tris[2][2] != "X"
                            && tris[2][2] != "O") {
                        tris[2][2] = macchina;
                        t++;
                    }

                    if (t == 0 && tris[0][0] == utente && tris[2][2] == utente && tris[4][4] != "X"
                            && tris[4][4] != "O") {
                        tris[4][4] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[0][4] == utente && tris[2][2] == utente && tris[4][0] != "X"
                            && tris[4][0] != "O") {
                        tris[4][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][4] == utente && tris[2][2] == utente && tris[0][0] != "X"
                            && tris[0][0] != "O") {
                        tris[0][0] = macchina;
                        t++;
                    }
                    if (t == 0 && tris[4][0] == utente && tris[2][2] == utente && tris[0][4] != "X"
                            && tris[0][4] != "O") {
                        tris[0][4] = macchina;
                        t++;
                    }

                    if (t == 0) {

                        int a = 0;
                        int conpos = 0;
                        int casella = (int) (Math.random() * 8);
                        String casellas = String.valueOf(casella);
                        int casellagiusta = 0;
                        while (a == 0) {
                            casella = (int) (Math.random() * 8);
                            casellagiusta = casella + 1;
                            casellas = String.valueOf(casellagiusta);
                            conpos = casellagiusta - 1;
                            if (contaposizioni[conpos] == 0) {
                                a++;
                                switch (casellas) {
                                    case "1":
                                        tris[0][0] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "2":
                                        tris[0][2] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "3":
                                        tris[0][4] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "4":
                                        tris[2][0] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "5":
                                        tris[2][2] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "6":
                                        tris[2][4] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "7":
                                        tris[4][0] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "8":
                                        tris[4][2] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;
                                    case "9":
                                        tris[4][4] = macchina;
                                        contaposizioni[conpos] = 1;

                                        break;

                                }
                            }
                        }
                    }
                    // controllo vincita
                    if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }
                    if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }
                    if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }
                    if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }
                    if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                        System.out.println("\nHAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                        System.out.println("HAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                        System.out.println("HAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                        System.out.println("HAI PERSO!");
                        rip = 9;
                        pareggio++;
                    }

                    // prossimo turno e stampa tris
                    rip++;
                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {

                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }

                        }
                    }
                }

                else// GIOCA UTENTE
                {
                    if (utente == "X") {
                        System.out.println(
                                "\n\n" + player + ", basandoti sulla legenda dove vuoi inserire la '" + utente + "' ?");
                    } else {
                        System.out.println(
                                "\n\n" + player + ", basandoti sulla legenda dove vuoi inserire il '" + utente + "' ?");
                    }
                    int b = 0;
                    while (b == 0) {
                        coordinata = input5.nextLine();
                        int conpostutente = Integer.valueOf(coordinata);
                        if (conpostutente < 10) {
                            if (contaposizioni[conpostutente - 1] == 0) {

                                // turno utente
                                switch (coordinata) {
                                    case "1":
                                        tris[0][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "2":
                                        tris[0][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "3":
                                        tris[0][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "4":
                                        tris[2][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "5":
                                        tris[2][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "6":
                                        tris[2][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "7":
                                        tris[4][0] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "8":
                                        tris[4][2] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;
                                    case "9":
                                        tris[4][4] = utente;
                                        valorearray = Integer.valueOf(coordinata);
                                        contaposizioni[valorearray - 1] = 1;
                                        break;

                                }

                                // controllo vincita
                                if (tris[0][0] == tris[0][2] && tris[0][0] == tris[0][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[2][0] == tris[2][2] && tris[2][0] == tris[2][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[4][0] == tris[4][2] && tris[4][0] == tris[4][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][0] && tris[0][0] == tris[4][0]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][2] == tris[2][2] && tris[0][2] == tris[4][2]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }
                                if (tris[0][4] == tris[2][4] && tris[0][4] == tris[4][4]) {
                                    System.out.println("\nHAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[2][2] && tris[0][0] == tris[4][4]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][4] == tris[2][2] && tris[0][4] == tris[4][0]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                if (tris[0][0] == tris[0][1] && tris[0][0] == tris[0][2]) {
                                    System.out.println("HAI VINTO!");
                                    rip = 9;
                                    pareggio++;
                                }

                                b++;
                            } else {
                                System.out.println("casella occupatsa,riprova");
                            }
                        } else {
                            System.out.println("casella non esistente,riprova");
                        }
                    }
                    // stampa mossa utente

                    for (int i = 0; i < tris.length; i++) {
                        System.out.println();
                        for (int j = 0; j < tris.length; j++) {
                            if (tris[i][j] == macchina || tris[i][j] == utente) {
                                if (tris[i][j] == utente) {
                                    System.out.print(" " + c + "[31m" + utente + c + "[0m" + " ");

                                } else {
                                    System.out.print(" " + c + "[34m" + macchina + c + "[0m" + " ");
                                }
                            } else {
                                System.out.print(" " + tris[i][j] + " ");
                            }
                            ;
                        }
                    }

                    rip++;
                } // fine turno utente

            }

        }
        if (pareggio == 0) {
            System.out.print("\n\n PAREGGIO");
        }
        pareggio = 0;

    }

}